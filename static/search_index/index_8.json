{"/share_docs/zh/change_doc.html":{"title":"编辑文档","content":"# 编辑文档 现在的 wiki 仓库内容过多，部分文档存在着一些没注意到的错误。 当读者发现错误的时候，可以自行进行修改。 可以分为几个步骤： 定位文档 > 编辑本页 登录 github 编辑文档 增加修改说明 提交 PR ## 定位文件 进入需要修改的文档页面，点击 “编辑本页” 后会跳转到文档所在的 github 的网址. ![点击编辑本页](./assets/edit_page.png) 没能够成功跳转的话可以尝试刷新网页或者自行搜索一下 github 打开方式（你以后会用得到） 成功跳转后会看到类似如下的界面： ![github页面](./assets/github_pages.png) ## 登录 github 因为 github 上对于仓库所做的任何更改都会留下相关记录，所以需要登录账号来确定相关身份。 点击 github 页面右上角的 `sign in` 来登陆账号 ![github_login](./../assets/2.png) ## 修改文档 点击下图所框出的图标就可以编辑当前文件。 ![edit_github_page](./assets/edit_github_page.png) wiki 文档文件主要以 markdown 为主，少部分为 ipynb 。 点击编辑当前文件后的界面如下所示，其中两个红框分别是 编辑文件 页面和 预览 页面。 编辑文件时可以切换到预览页面来查看一下编辑效果。 ![edit_preview](./assets/edit_preview.png) ## 增加修改说明 文档修改完毕后，需要在编辑框最底下进行提交。 可以在红框中简述修改信息，并且在蓝框中补充说明。 也可以不进行说明直接点下方的绿色的 `Commit Changes` 来进行提交 ![commit_changes](./assets/commit.png) ## 提交 PR 进行完上面的修改说明后，会跳转到如下图所示的界面。 ![able_merge](./assets/able_merge.png) 出现下图红框处的 `Able to merge` 的话就说明能够正常提交了，这个时候点击如图右下方的 `Create pull request` 来提交申请。 点击下图中的 `Create pull request` 来确定提交。 ![create_pr](./assets/create_pr.png) 仓库管理员看到之后，会在确认合理、可用后接受提交申请。 > 感谢参与建设开源文档"},"/share_docs/zh/add_doc.html":{"title":"分享文档","content":"# 分享文档 如果你有什么好的文档想分享出来的话，可以通过 github 来分享到我们的 wiki 上面。 这里说明一些方法: ## 分享纯文本内容 目前 wiki 主要网页支持 markdown 和 ipynb 两种文档。 当然需要先登录进 github，然后在 https://github.com/sipeed/sipeed_wiki 页面选择 'Upload files' ![upload](./assets/upload.png) 这个时候会发现因为没有权限而被禁止上传。 ![unable_upload](./assets/unable_upload.png) 点一下右上角的 Fork 来克隆一份到我们自己的仓库。 ![create_fork](./assets/create_fork.png) 这样我们就可以在自己所 Fork 的仓库里面添加文件 'Upload Files' 了。 ![fork_upload_files](./assets/fork_upload_files.png) 在接下来的页面中我们**把想要分享的文档直接拖拽到红框处，比如下图紫框中就是已经上传的文件，然后在蓝框中补充说明一下**。最后可以点击绿色的 `Commit changes` 来在自己所 Fork 的仓库提交了 ![added](./assets/added.png) 提交完之后我们需要把自己的更改合并到 sipeed wiki 的 github 仓库 ![fork_pull_request](./assets/fork_pull_request.png) 仓库管理员看到后会根据蓝框中的说明把文档移植到正确的位置。 > 感谢参与建设开源文档 ## 添加包含图片的内容 因为添加图片的文档在 wiki 上面显示效果可能与在编辑器里所看到的效果不一样，因此建议在本地构建一下 wiki 来查看自己所编写的文档在 wiki 上面显示的实际结果，所以不建议像上面一样直接 `Upload Files`。 需要先 Fork Sipeed 的仓库，这样自己就可以编辑 wiki 仓库了（当然所编辑的仓库应该是你所 Fork 的），然后自己将所 Fork 的仓库 Clone 到本地，这样在后面完成添加文档后就能够直接将所 clone 的仓库推送到远程仓库了，不然可能会因为权限相关的问题导致不少麻烦~ 对于下面的命令，我们需要将第一行的 `https://github.com/sipeed/sipeed_wiki.git` 替换成我们所 Fork 为自己的仓库的地址 ```bash git clone https://github.com/sipeed/sipeed_wiki.git pip install teedoc cd sipeed_wiki teedoc install teedoc serve ``` 在我们所 Fork 的 Sipeed wiki 的仓库中，点击下图所标注的位置来获得当前仓库的地址。 ![copy_forked_url](./assets/copy_forked_url.png) 这里以所获得的仓库地址 https://github.com/example/sipeed_wiki.git 为例，将上面的命令行改成下面的形式就可以直接 clone、在本机构建 wiki 网站了，然后访问 [127.0.0.1:2333](127.0.0.1:2333) 查看构建效果。 ```bash git clone https://github.com/example/sipeed_wiki.git pip install teedoc cd sipeed_wiki teedoc install teedoc serve ``` wiki 仓库里面的主要文档存在的文件目录如下： ```bash . ├── docs ## 文档路径 │   ├── hardware ## 产品文档 │   └── soft ## 软件文档 └── news ## 博文精选 ``` 文档文件以 markdown 和 ipynb 为主，需要会相关语法~ 一般来说添加内容到 news/ 就可以；自己新建文件夹然后添加内容。 然后可以在本地电脑所构建的 wiki 的博文精选里面看到自己所添加文档在 wiki 上面的实际显示效果了。 ![view_result](./assets/view_result.png) 自己对添加内容满意的话，将本地的仓库推送到远程的 github 仓库，接着给 Sipeed wiki 仓库提交代码。 ![fork_pull_request](./assets/fork_pull_request.png) 点击上面的 `Open pull request` 后会打开下图的界面，我们选择 `Create pull request` 即可后就提交上去了。 ![create_pr](./assets/create_pr.png) 仓库管理员看到之后，会在确认合理、可用后接受提交申请。 > 感谢参与建设开源文档"},"/share_docs/zh/index.html":{"title":"修改 wiki","content":"# 修改 wiki wiki 文档中可能会有一些错误，或者大家有什么好的文章想分享的话，就需要编辑 wiki 了。 下面根据不同的场景来进行相关方式说明： [**修改文档**](./change_doc.html) < 点它 [**添加文档**](./add_doc.html) < 点它 来一起把 wiki 建设的更好"}}