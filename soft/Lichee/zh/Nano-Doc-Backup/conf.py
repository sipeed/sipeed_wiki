# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/stable/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('.'))
import sphinx_rtd_theme
import recommonmark


# -- Project information -----------------------------------------------------

project = u'荔枝派Nano 全流程指南'
copyright = u'2018, Lichee'
author = u'Lichee'

# The short X.Y version
version = u''
# The full version, including alpha/beta/rc tags
release = u''


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = ['.rst', '.md']
# source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = u'zh-CN'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = [u'_build', 'Thumbs.db', '.DS_Store','.vscode']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# show the link to 'view page source'
html_show_sourcelink = False

# Web icon
html_favicon = u'_static/icon/icon.png'

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = u'_static/icon/icon2.png'

# -- Options for HTMLHelp output ---------------------------------------------

html_theme_options = {
    'display_version': False,
}

# Output file base name for HTML help builder.
htmlhelp_basename = 'Nanodoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
    'preamble': r'''    
        \hypersetup{unicode=true}    
        \usepackage{CJKutf8}    
        \DeclareUnicodeCharacter{00A0}{\nobreakspace}    
        \DeclareUnicodeCharacter{2203}{\ensuremath{\exists}}    
        \DeclareUnicodeCharacter{2200}{\ensuremath{\forall}}    
        \DeclareUnicodeCharacter{2286}{\ensuremath{\subseteq}}    
        \DeclareUnicodeCharacter{2713}{x}    
        \DeclareUnicodeCharacter{27FA}{\ensuremath{\Longleftrightarrow}}    
        \DeclareUnicodeCharacter{221A}{\ensuremath{\sqrt{}}}    
        \DeclareUnicodeCharacter{221B}{\ensuremath{\sqrt[3]{}}}    
        \DeclareUnicodeCharacter{2295}{\ensuremath{\oplus}}    
        \DeclareUnicodeCharacter{2297}{\ensuremath{\otimes}}    
        \begin{CJK}{UTF8}{gbsn}    
        \AtEndDocument{\end{CJK}}    ''',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'Nano.tex', u'荔枝派Nano 全流程指南 Documentation',
     u'Lichee', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'nano', u'荔枝派Nano 全流程指南 Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'Nano', u'荔枝派Nano 全流程指南 Documentation',
     author, 'Nano', 'One line description of project.',
     'Miscellaneous'),
]

# added support for .md doc
from recommonmark.parser import CommonMarkParser
from recommonmark.transform import AutoStructify
source_parsers = {
    '.md': 'recommonmark.parser.CommonMarkParser',
}
github_doc_root = 'https://github.com/rtfd/recommonmark/tree/master/doc/'


def setup(app):
    app.add_config_value('recommonmark_config', {
        'url_resolver': lambda url: github_doc_root + url,
        'auto_toc_tree_section': 'Contents',
        'enable_eval_rst': True,
        'enable_auto_doc_ref': True,
    }, True)
    app.add_transform(AutoStructify)